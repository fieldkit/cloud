image: golang:latest

stages:
  - test
  - build

variables:
  POSTGRES_DB: fieldkit
  POSTGRES_USER: fieldkit
  POSTGRES_PASSWORD: password
  FIELDKIT_POSTGRES_URL: postgres://fieldkit:password@db:5432/fieldkit?sslmode=disable
  VERSION: 0.3.50 # TODO

test:go:
  stage: test
  services:
    - name: kartoza/postgis:14-3
      alias: db
    - name: timescale/timescaledb:2.4.2-pg13
      alias: tsdb
  script:
    - (cd server/cmd/server && go build -o build/server)
    - (cd server && go test -p 1 -coverprofile=coverage.data ./...)

test:js:
  stage: test
  image: node:18.17.0
  script:
    - cd portal && which node && which npm
    - npm install
    - cp src/secrets.ts.template src/secrets.ts
    - node_modules/.bin/vue-cli-service build
    - node_modules/.bin/vue-cli-service test:unit

build:compile:
  stage: build
  script:
    - cp portal/src/secrets.ts.template portal/src/secrets.ts
    - cd server/cmd/server && go build -o build/server

build:images:
  when: manual
  stage: build
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker version
    - docker info
    - cp portal/src/secrets.ts.aws portal/src/secrets.ts
    - export DOCKER_TAG=${VERSION}-${CI_COMMIT_SHA:0:8}
    - echo $DOCKER_TAG
    - docker build -t conservify/fk-cloud:$DOCKER_TAG --build-arg GIT_HASH=${CI_COMMIT_SHA:0:8} --build-arg VERSION=${VERSION} .
    - cd charting
    - tar -czh --exclude='./node_modules' . | docker build -t conservify/fk-charting:$DOCKER_TAG --build-arg GIT_HASH=${CI_COMMIT_SHA:0:8} --build-arg VERSION=${VERSION} -
