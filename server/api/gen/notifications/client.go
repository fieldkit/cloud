// Code generated by goa v3.2.4, DO NOT EDIT.
//
// notifications client
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package notifications

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "notifications" service client.
type Client struct {
	ListenEndpoint goa.Endpoint
	SeenEndpoint   goa.Endpoint
}

// NewClient initializes a "notifications" service client given the endpoints.
func NewClient(listen, seen goa.Endpoint) *Client {
	return &Client{
		ListenEndpoint: listen,
		SeenEndpoint:   seen,
	}
}

// Listen calls the "listen" endpoint of the "notifications" service.
func (c *Client) Listen(ctx context.Context) (res ListenClientStream, err error) {
	var ires interface{}
	ires, err = c.ListenEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(ListenClientStream), nil
}

// Seen calls the "seen" endpoint of the "notifications" service.
func (c *Client) Seen(ctx context.Context, p *SeenPayload) (err error) {
	_, err = c.SeenEndpoint(ctx, p)
	return
}
