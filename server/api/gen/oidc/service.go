// Code generated by goa v3.2.4, DO NOT EDIT.
//
// oidc service
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package oidc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Service is the oidc service interface.
type Service interface {
	// Required implements required.
	Required(context.Context, *RequiredPayload) (res *RequiredResult, err error)
	// URL implements url.
	URL(context.Context, *URLPayload) (res *URLResult, err error)
	// Authenticate implements authenticate.
	Authenticate(context.Context, *AuthenticatePayload) (res *AuthenticateResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "oidc"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"required", "url", "authenticate"}

// RequiredPayload is the payload type of the oidc service required method.
type RequiredPayload struct {
	Token  *string
	Follow *bool
	After  *string
}

// RequiredResult is the result type of the oidc service required method.
type RequiredResult struct {
	Location string
}

// URLPayload is the payload type of the oidc service url method.
type URLPayload struct {
	Token  *string
	Follow *bool
	After  *string
}

// URLResult is the result type of the oidc service url method.
type URLResult struct {
	Location string
}

// AuthenticatePayload is the payload type of the oidc service authenticate
// method.
type AuthenticatePayload struct {
	State        string
	SessionState string
	Code         string
}

// AuthenticateResult is the result type of the oidc service authenticate
// method.
type AuthenticateResult struct {
	Location string
	Token    string
	Header   string
}

// MakeUserUnverified builds a goa.ServiceError from an error.
func MakeUserUnverified(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "user-unverified",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "unauthorized",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeForbidden builds a goa.ServiceError from an error.
func MakeForbidden(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "forbidden",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "not-found",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "bad-request",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
