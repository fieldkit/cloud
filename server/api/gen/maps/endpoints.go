// Code generated by goa v3.2.4, DO NOT EDIT.
//
// maps endpoints
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package maps

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "maps" service endpoints.
type Endpoints struct {
	Coverage goa.Endpoint
}

// NewEndpoints wraps the methods of the "maps" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Coverage: NewCoverageEndpoint(s),
	}
}

// Use applies the given middleware to all the "maps" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Coverage = m(e.Coverage)
}

// NewCoverageEndpoint returns an endpoint function that calls the method
// "coverage" of service "maps".
func NewCoverageEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		res, err := s.Coverage(ctx)
		if err != nil {
			return nil, err
		}
		vres := NewViewedMap(res, "default")
		return vres, nil
	}
}
