// Code generated by goa v3.2.4, DO NOT EDIT.
//
// collection client
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package collection

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "collection" service client.
type Client struct {
	AddEndpoint           goa.Endpoint
	UpdateEndpoint        goa.Endpoint
	GetEndpoint           goa.Endpoint
	ListMineEndpoint      goa.Endpoint
	AddStationEndpoint    goa.Endpoint
	RemoveStationEndpoint goa.Endpoint
	DeleteEndpoint        goa.Endpoint
}

// NewClient initializes a "collection" service client given the endpoints.
func NewClient(add, update, get, listMine, addStation, removeStation, delete_ goa.Endpoint) *Client {
	return &Client{
		AddEndpoint:           add,
		UpdateEndpoint:        update,
		GetEndpoint:           get,
		ListMineEndpoint:      listMine,
		AddStationEndpoint:    addStation,
		RemoveStationEndpoint: removeStation,
		DeleteEndpoint:        delete_,
	}
}

// Add calls the "add" endpoint of the "collection" service.
func (c *Client) Add(ctx context.Context, p *AddPayload) (res *Collection, err error) {
	var ires interface{}
	ires, err = c.AddEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Collection), nil
}

// Update calls the "update" endpoint of the "collection" service.
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (res *Collection, err error) {
	var ires interface{}
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Collection), nil
}

// Get calls the "get" endpoint of the "collection" service.
func (c *Client) Get(ctx context.Context, p *GetPayload) (res *Collection, err error) {
	var ires interface{}
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Collection), nil
}

// ListMine calls the "list mine" endpoint of the "collection" service.
func (c *Client) ListMine(ctx context.Context, p *ListMinePayload) (res *Collections, err error) {
	var ires interface{}
	ires, err = c.ListMineEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Collections), nil
}

// AddStation calls the "add station" endpoint of the "collection" service.
func (c *Client) AddStation(ctx context.Context, p *AddStationPayload) (err error) {
	_, err = c.AddStationEndpoint(ctx, p)
	return
}

// RemoveStation calls the "remove station" endpoint of the "collection"
// service.
func (c *Client) RemoveStation(ctx context.Context, p *RemoveStationPayload) (err error) {
	_, err = c.RemoveStationEndpoint(ctx, p)
	return
}

// Delete calls the "delete" endpoint of the "collection" service.
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}
