// Code generated by goa v3.2.4, DO NOT EDIT.
//
// sensor views
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// SavedBookmark is the viewed result type that is projected based on a view.
type SavedBookmark struct {
	// Type to project
	Projected *SavedBookmarkView
	// View to render
	View string
}

// SavedBookmarkView is a type that runs validations on a projected type.
type SavedBookmarkView struct {
	URL      *string
	Bookmark *string
	Token    *string
}

var (
	// SavedBookmarkMap is a map of attribute names in result type SavedBookmark
	// indexed by view name.
	SavedBookmarkMap = map[string][]string{
		"default": []string{
			"url",
			"bookmark",
			"token",
		},
	}
)

// ValidateSavedBookmark runs the validations defined on the viewed result type
// SavedBookmark.
func ValidateSavedBookmark(result *SavedBookmark) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateSavedBookmarkView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateSavedBookmarkView runs the validations defined on SavedBookmarkView
// using the "default" view.
func ValidateSavedBookmarkView(result *SavedBookmarkView) (err error) {
	if result.URL == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("url", "result"))
	}
	if result.Bookmark == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("bookmark", "result"))
	}
	if result.Token == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("token", "result"))
	}
	return
}
