// Code generated by goa v3.2.4, DO NOT EDIT.
//
// activity HTTP client CLI support package
//
// Command:
// $ goa gen github.com/fieldkit/cloud/server/api/design

package client

import (
	"fmt"
	"strconv"

	activity "github.com/fieldkit/cloud/server/api/gen/activity"
)

// BuildStationPayload builds the payload for the activity station endpoint
// from CLI flags.
func BuildStationPayload(activityStationID string, activityStationPage string, activityStationAuth string) (*activity.StationPayload, error) {
	var err error
	var id int64
	{
		id, err = strconv.ParseInt(activityStationID, 10, 64)
		if err != nil {
			return nil, fmt.Errorf("invalid value for id, must be INT64")
		}
	}
	var page *int64
	{
		if activityStationPage != "" {
			val, err := strconv.ParseInt(activityStationPage, 10, 64)
			page = &val
			if err != nil {
				return nil, fmt.Errorf("invalid value for page, must be INT64")
			}
		}
	}
	var auth *string
	{
		if activityStationAuth != "" {
			auth = &activityStationAuth
		}
	}
	v := &activity.StationPayload{}
	v.ID = id
	v.Page = page
	v.Auth = auth

	return v, nil
}

// BuildProjectPayload builds the payload for the activity project endpoint
// from CLI flags.
func BuildProjectPayload(activityProjectID string, activityProjectPage string, activityProjectAuth string) (*activity.ProjectPayload, error) {
	var err error
	var id int64
	{
		id, err = strconv.ParseInt(activityProjectID, 10, 64)
		if err != nil {
			return nil, fmt.Errorf("invalid value for id, must be INT64")
		}
	}
	var page *int64
	{
		if activityProjectPage != "" {
			val, err := strconv.ParseInt(activityProjectPage, 10, 64)
			page = &val
			if err != nil {
				return nil, fmt.Errorf("invalid value for page, must be INT64")
			}
		}
	}
	var auth *string
	{
		if activityProjectAuth != "" {
			auth = &activityProjectAuth
		}
	}
	v := &activity.ProjectPayload{}
	v.ID = id
	v.Page = page
	v.Auth = auth

	return v, nil
}
