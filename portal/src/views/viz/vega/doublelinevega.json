{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A basic line chart example.",
  "autosize": {
    "type": "fit",
    "contains": "padding"
  },
  "padding": 5,
  "config": {
    "axis": {
      "labelFont": "Avenir Light",
      "labelFontSize": 12,
      "labelColor": "#6a6d71",
      "titleFont": "Avenir Light",
      "titleFontSize": 14,
      "titlePadding": 20,
      "tickSize": 10,
      "tickOpacity": 0,
      "domain": false,
      "grid": true,
      "gridDash": [
        2,
        2
      ]
    }
  },
  "signals": [
    {
      "name": "width",
      "init": "containerSize()[0]",
      "on": [
        {
          "events": "window:resize",
          "update": "containerSize()[0]"
        }
      ]
    },
    {
      "name": "height",
      "init": "containerSize()[1]",
      "on": [
        {
          "events": "window:resize",
          "update": "containerSize()[1]"
        }
      ]
    },
    {
      "name": "hover",
      "value": {
        "name": "LEFT"
      },
      "on": [
        {
          "events": "symbol:mouseover",
          "update": "datum"
        }
      ]
    },
    {
      "name": "unit",
      "value": {},
      "on": [
        {
          "events": "mousemove",
          "update": "isTuple(group()) ? group() : unit"
        }
      ]
    },
    {
      "name": "brush2",
      "update": "vlSelectionResolve(\"brush2_store\", \"union\")"
    },
    {
      "name": "brush2_x",
      "value": [],
      "on": [
        {
          "events": {
            "source": "view",
            "type": "mousedown",
            "filter": [
              "!event.item || event.item.mark.name !== \"brush2_brush\""
            ]
          },
          "update": "[x(unit), x(unit)]"
        },
        {
          "events": {
            "source": "window",
            "type": "mousemove",
            "consume": true,
            "between": [
              {
                "source": "view",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush2_brush\""
                ]
              },
              {
                "source": "window",
                "type": "mouseup"
              }
            ]
          },
          "update": "[brush2_x[0], clamp(x(unit), 0, width)]"
        },
        {
          "events": {
            "signal": "brush2_scale_trigger"
          },
          "update": "[scale(\"x\", brush2_time[0]), scale(\"x\", brush2_time[1])]"
        },
        {
          "events": [
            {
              "source": "view",
              "type": "dblclick"
            }
          ],
          "update": "[0, 0]"
        },
        {
          "events": {
            "signal": "brush2_translate_delta"
          },
          "update": "clampRange(panLinear(brush2_translate_anchor.extent_x, brush2_translate_delta.x / span(brush2_translate_anchor.extent_x)), 0, width)"
        },
        {
          "events": {
            "signal": "brush2_zoom_delta"
          },
          "update": "clampRange(zoomLinear(brush2_x, brush2_zoom_anchor.x, brush2_zoom_delta), 0, width)"
        }
      ]
    },
    {
      "name": "brush2_time",
      "on": [
        {
          "events": {
            "signal": "brush2_x"
          },
          "update": "brush2_x[0] === brush2_x[1] ? null : invert(\"x\", brush2_x)"
        }
      ]
    },
    {
      "name": "brush2_scale_trigger",
      "value": {},
      "on": [
        {
          "events": [
            {
              "scale": "x"
            }
          ],
          "update": "(!isArray(brush2_time) || (+invert(\"x\", brush2_x)[0] === +brush2_time[0] && +invert(\"x\", brush2_x)[1] === +brush2_time[1])) ? brush2_scale_trigger : {}"
        }
      ]
    },
    {
      "name": "brush2_tuple",
      "on": [
        {
          "events": [
            {
              "signal": "brush2_time"
            }
          ],
          "update": "brush2_time ? {fields: brush2_tuple_fields, values: [brush2_time]} : null"
        }
      ]
    },
    {
      "name": "brush2_tuple_fields",
      "value": [
        {
          "field": "time",
          "channel": "x",
          "type": "R"
        }
      ]
    },
    {
      "name": "brush2_translate_anchor",
      "value": {},
      "on": [
        {
          "events": [
            {
              "source": "view",
              "type": "mousedown",
              "markname": "brush2_brush"
            }
          ],
          "update": "{x: x(unit), y: y(unit), extent_x: slice(brush2_x)}"
        }
      ]
    },
    {
      "name": "brush2_translate_delta",
      "value": {},
      "on": [
        {
          "events": [
            {
              "source": "window",
              "type": "mousemove",
              "consume": true,
              "between": [
                {
                  "source": "view",
                  "type": "mousedown",
                  "markname": "brush2_brush"
                },
                {
                  "source": "window",
                  "type": "mouseup"
                }
              ]
            }
          ],
          "update": "{x: brush2_translate_anchor.x - x(unit), y: brush2_translate_anchor.y - y(unit)}"
        }
      ]
    },
    {
      "name": "brush2_zoom_anchor",
      "on": [
        {
          "events": [
            {
              "source": "view",
              "type": "wheel",
              "consume": true,
              "markname": "brush2_brush"
            }
          ],
          "update": "{x: x(unit), y: y(unit)}"
        }
      ]
    },
    {
      "name": "brush2_zoom_delta",
      "on": [
        {
          "events": [
            {
              "source": "view",
              "type": "wheel",
              "consume": true,
              "markname": "brush2_brush"
            }
          ],
          "force": true,
          "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
        }
      ]
    },
    {
      "name": "brush2_modify",
      "on": [
        {
          "events": {
            "signal": "brush2_tuple"
          },
          "update": "modify(\"brush2_store\", brush2_tuple, true)"
        }
      ]
    }
  ],
  "data": [
    {
      "name": "brush2_store"
    },
    {
      "name": "table1",
      "values": []
    },
    {
      "name": "table2",
      "values": []
    },
    {
      "name": "table1Valid",
      "source": "table1",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum.value)"
        }
      ]
    },
    {
      "name": "table2Valid",
      "source": "table2",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum.value)"
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "time",
      "range": "width",
      "domain": {
        "data": "table1",
        "field": "time"
      }
    },
    {
      "name": "y",
      "type": "linear",
      "range": "height",
      "nice": true,
      "zero": true,
      "domain": {
        "data": "table1",
        "field": "value"
      }
    },
    {
      "name": "x2",
      "type": "time",
      "range": "width",
      "domain": {
        "data": "table2",
        "field": "time"
      }
    },
    {
      "name": "y2",
      "type": "linear",
      "range": "height",
      "nice": true,
      "zero": true,
      "domain": {
        "data": "table2",
        "field": "value"
      }
    }
  ],
  "legends": [
    {
      "title": "LEFT",
      "stroke": "colorLeft",
      "orient": "top",
      "direction": "horizontal",
      "symbolType": "stroke",
      "labelOpacity": {
        "signal": "hover.name == 'LEFT' ? 1 : 0.1"
      },
      "symbolOpacity": {
        "signal": "hover.name == 'LEFT' ? 1 : 0.1"
      },
      "titleOpacity": {
        "signal": "hover.name == 'LEFT' ? 1 : 0.1"
      }
    },
    {
      "title": "RIGHT",
      "stroke": "colorRight",
      "orient": "top",
      "direction": "horizontal",
      "symbolType": "stroke",
      "labelOpacity": {
        "signal": "hover.name == 'RIGHT' ? 1 : 0.1"
      },
      "symbolOpacity": {
        "signal": "hover.name == 'RIGHT' ? 1 : 0.1"
      },
      "titleOpacity": {
        "signal": "hover.name == 'RIGHT' ? 1 : 0.1"
      }
    }
  ],
  "axes": [
    {
      "orient": "bottom",
      "scale": "x",
      "tickCount": 8,
      "labelPadding": -24,
      "tickSize": 30,
      "tickDash": [
        2,
        2
      ]
    },
    {
      "orient": "left",
      "scale": "y",
      "tickCount": 5,
      "titleOpacity": {
        "signal": "hover.name == 'LEFT' ? 1 : 0.2"
      },
      "gridOpacity": {
        "signal": "hover.name == 'LEFT' ? 1 : 0.2"
      },
      "labelOpacity": {
        "signal": "hover.name == 'LEFT' ? 1 : 0.2"
      }
    },
    {
      "orient": "right",
      "scale": "y2",
      "tickCount": 5,
      "titleOpacity": {
        "signal": "hover.name == 'RIGHT' ? 1 : 0.2"
      },
      "gridOpacity": {
        "signal": "hover.name == 'RIGHT' ? 1 : 0.2"
      },
      "labelOpacity": {
        "signal": "hover.name == 'RIGHT' ? 1 : 0.2"
      }
    }
  ],
  "marks": [
    {
      "name": "brush1_brush_bg",
      "type": "rect",
      "clip": true,
      "encode": {
        "enter": {
          "fill": {
            "value": "#333"
          },
          "fillOpacity": {
            "value": 0.125
          }
        },
        "update": {
          "x": [
            {
              "test": "data(\"brush2_store\").length",
              "signal": "brush2_x[0]"
            },
            {
              "value": 0
            }
          ],
          "y": [
            {
              "test": "data(\"brush2_store\").length",
              "value": 0
            },
            {
              "value": 0
            }
          ],
          "x2": [
            {
              "test": "data(\"brush2_store\").length",
              "signal": "brush2_x[1]"
            },
            {
              "value": 0
            }
          ],
          "y2": [
            {
              "test": "data(\"brush2_store\").length",
              "field": {
                "group": "height"
              }
            },
            {
              "value": 0
            }
          ]
        }
      }
    },
    {
      "name": "brush2_brush",
      "type": "rect",
      "clip": true,
      "encode": {
        "enter": {
          "fill": {
            "value": "transparent"
          }
        },
        "update": {
          "x": [
            {
              "test": "data(\"brush2_store\").length",
              "signal": "brush2_x[0]"
            },
            {
              "value": 0
            }
          ],
          "y": [
            {
              "test": "data(\"brush2_store\").length",
              "value": 0
            },
            {
              "value": 0
            }
          ],
          "x2": [
            {
              "test": "data(\"brush2_store\").length",
              "signal": "brush2_x[1]"
            },
            {
              "value": 0
            }
          ],
          "y2": [
            {
              "test": "data(\"brush2_store\").length",
              "field": {
                "group": "height"
              }
            },
            {
              "value": 0
            }
          ],
          "stroke": [
            {
              "test": "brush2_x[0] !== brush2_x[1]",
              "value": "white"
            },
            {
              "value": null
            }
          ]
        }
      }
    },
    {
      "type": "group",
      "marks": [
        {
          "type": "line",
          "from": {
            "data": "table1Valid"
          },
          "encode": {
            "enter": {
              "interpolate": {
                "value": "cardinal"
              },
              "tension": {
                "value": 0.9
              },
              "x": {
                "scale": "x",
                "field": "time"
              },
              "y": {
                "scale": "y",
                "field": "value"
              },
              "stroke": {
                "value": "#cccccc"
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeDash": {
                "value": [
                  4,
                  4
                ]
              }
            },
            "update": {
              "strokeOpacity": {
                "signal": "hover.name == 'LEFT' ? 1 : 0.3"
              }
            }
          }
        },
        {
          "type": "symbol",
          "from": {
            "data": "table1"
          },
          "encode": {
            "enter": {
              "x": {
                "scale": "x",
                "field": "time"
              },
              "y": {
                "scale": "y",
                "field": "value"
              },
              "stroke": {
                "value": null
              },
              "strokeWidth": {
                "value": 2
              },
              "size": {
                "value": 100
              },
              "tooltip": {
                "signal": "{title: 'LEFT', 'Value': join([round(datum.value*10)/10, '%'], ' '), 'time': timeFormat(datum.time, '%Y-%m-%d %H:%m')}"
              },
              "fill": {
                "value": "blue"
              },
              "fillOpacity": {
                "value": 0
              }
            },
            "hover": {
              "fillOpacity": {
                "value": 0.5
              }
            },
            "update": {
              "fillOpacity": {
                "value": 0
              }
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "marks": [
        {
          "type": "line",
          "from": {
            "data": "table2Valid"
          },
          "encode": {
            "enter": {
              "interpolate": {
                "value": "cardinal"
              },
              "tension": {
                "value": 0.9
              },
              "x": {
                "scale": "x2",
                "field": "time"
              },
              "y": {
                "scale": "y2",
                "field": "value"
              },
              "stroke": {
                "value": "#cccccc"
              },
              "strokeWidth": {
                "value": 1
              },
              "strokeDash": {
                "value": [
                  4,
                  4
                ]
              }
            },
            "update": {
              "strokeOpacity": {
                "signal": "hover.name == 'RIGHT' ? 1 : 0.3"
              }
            }
          }
        },
        {
          "type": "symbol",
          "from": {
            "data": "table2"
          },
          "encode": {
            "enter": {
              "x": {
                "scale": "x2",
                "field": "time"
              },
              "y": {
                "scale": "y2",
                "field": "value"
              },
              "stroke": {
                "value": null
              },
              "strokeWidth": {
                "value": 2
              },
              "size": {
                "value": 100
              },
              "tooltip": {
                "signal": "{title: 'RIGHT', 'Value': join([round(datum.value*10)/10, '°F'], ' '), 'time': timeFormat(datum.time, '%Y-%m-%d %H:%m')}"
              },
              "fill": {
                "value": "red"
              },
              "fillOpacity": {
                "value": 0
              }
            },
            "hover": {
              "fillOpacity": {
                "value": 0.5
              }
            },
            "update": {
              "fillOpacity": {
                "value": 0
              }
            }
          }
        }
      ]
    }
  ]
}